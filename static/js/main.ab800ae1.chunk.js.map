{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","onClick","toggleMode","htmlFor","defaultProps","about","TextForm","useState","Text","setText","heading","value","onChange","event","console","log","target","style","backgroundcolor","rows","NewText","toUpperCase","toLowerCase","charAt","slice","split","length","App","setMode","document","body","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ab800ae1.chunk.js","sourcesContent":["import React from 'react'\r\n// import {Link} from 'react-router-dom'\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar- ${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/Textform\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/Textform\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light' } `} >\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick= {props.toggleMode} />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"set title here \",\r\n  about: \"About text here\"\r\n}\r\n\r\nexport default Navbar\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport const TextForm = (props) => {\r\n    \r\n    const handleOnchange = (event)=>{\r\n        console.log('on change');\r\n        setText(event.target.value)\r\n    }\r\n    const handleupclick = ()=>{\r\n        // console.log('upppercase was clicked' + Text);\r\n        let NewText = Text.toUpperCase();\r\n        setText(NewText)\r\n    }\r\n\r\n    const handlelowclick = ()=>{\r\n        // console.log('lowercase was clicked' + Text);\r\n        let NewText = Text.toLowerCase();\r\n        setText(NewText)\r\n        \r\n    }\r\n    const capitalize = ()=>{\r\n         let firstchar = Text.charAt(0);\r\n        //  console.log(\"capitalize was hit\");\r\n         let NewText= firstchar.toUpperCase();\r\n         setText(NewText+Text.slice(1));\r\n    }\r\n    const clear = ()=>{\r\n        let NewText = \"\";\r\n        console.log('clear was hit ')\r\n        setText(NewText)\r\n    }\r\n    \r\n    const [Text , setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value= {Text} onChange={handleOnchange} style={{backgroundcolor:props.mode==='dark'?'dark':'white' }} id=\"mybox\" rows=\"5\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleupclick} >Convert to upper case</button>\r\n            <button className=\"btn btn-primary mx-2 \" onClick={handlelowclick} >Convert to lower case</button>\r\n            <button className=\"btn btn-primary mx-2 \" onClick={capitalize} >Capitalize</button>\r\n            <button className=\"btn btn-primary mx-2 \" onClick={clear} >clear</button>\r\n\r\n        </div>\r\n        <div className=\"container my-4\">\r\n            <h2>Your Text Summary</h2>\r\n            <p> {Text.split(\" \").length} Words  and  {Text.length} characters</p>\r\n            <p> {0.8 * Text.split(\" \").length } Minute Read </p>\r\n            <h2>Preview</h2>\r\n            <p>{Text}</p>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nexport default TextForm\r\n\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react'\n// import Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === 'light') {\n      document.body.style.backgroundColor = \"#042743\";\n      document.body.style.color = \"white\";\n      setMode('dark');\n      document.title = \"textUtils-Dark mode\"\n      // showAlert('dark mode has enabled','success');\n    }\n    else {\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      setMode('light');\n      document.title = \"textUtils-light mode\"\n      // showAlert('dark mode has disabled','success');\n\n    }\n  }\n  // alert\n  // const [alert, setAlert] = useState(null)\n\n  // const showAlert =(message,type)=>{\n  //   setAlert({\n  //     msg: message,\n  //     type: type\n  //   })\n\n  // }\n\n  return (\n    <>\n      {/* <Router> */}\n        {/* <Navbar title=\"TextUtils\" about=\"About TextUtils \" /> */}\n        <Navbar mode={mode} toggleMode={toggleMode} />\n        {/* <Alert Alert='Rishikesh'/> */}\n        {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/TextForm\"> */}\n            <TextForm heading=\"Enter your name\" />\n          {/* </Route> */}\n        {/* </Switch> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}